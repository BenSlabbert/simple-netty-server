<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.example.netty</groupId>
  <artifactId>netty-example</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <google-java-format.version>1.11.0</google-java-format.version>
    <spotless.version>2.13.0</spotless.version>
    <gson.version>2.8.8</gson.version>
    <netty.version>4.1.68.Final</netty.version>
    <log4j.version>1.2.17</log4j.version>
    <junit.jupiter.version>5.8.0</junit.jupiter.version>
    <assertj.version>3.21.0</assertj.version>
    <maven-shade.version>3.2.4</maven-shade.version>
    <maven-compiler.version>3.8.1</maven-compiler.version>
    <maven-surefire.version>2.22.2</maven-surefire.version>
    <lettuce-core.version>6.1.5.RELEASE</lettuce-core.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.lettuce</groupId>
      <artifactId>lettuce-core</artifactId>
      <version>${lettuce-core.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${gson.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-all</artifactId>
      <version>${netty.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-transport-native-epoll</artifactId>
      <version>${netty.version}</version>
      <classifier>linux-x86_64</classifier>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven-shade.version}</version>
        <executions>
          <execution>
            <id>build-server</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>org.example.netty.server.Main</mainClass>
                </transformer>
              </transformers>
              <finalName>server-all-${project.version}</finalName>
            </configuration>
          </execution>
          <execution>
            <id>build-client</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>org.example.netty.client.Main</mainClass>
                </transformer>
              </transformers>
              <finalName>client-all-${project.version}</finalName>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--      *************************************************************************************************-->
      <!--      *************************************************************************************************-->
      <!--      ignore for now as we are using the shade plugin to generate 2 uber jars for the server and client-->
      <!--      *************************************************************************************************-->
      <!--      *************************************************************************************************-->
      <!--      <plugin>-->
      <!--        <groupId>org.apache.maven.plugins</groupId>-->
      <!--        <artifactId>maven-jar-plugin</artifactId>-->
      <!--        <version>3.2.0</version>-->
      <!--        <configuration>-->
      <!--          <finalName>netty-example</finalName>-->
      <!--          <archive>-->
      <!--            <manifest>-->
      <!--              <addClasspath>true</addClasspath>-->
      <!--              <classpathPrefix>lib/</classpathPrefix>-->
      <!--              <mainClass>org.example.netty.client.Main</mainClass>-->
      <!--            </manifest>-->
      <!--          </archive>-->
      <!--        </configuration>-->
      <!--      </plugin>-->
      <!--      *************************************************************************************************-->
      <!--      *************************************************************************************************-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire.version}</version>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.version}</version>
        <configuration>
          <formats>
            <format>
              <includes>
                <include>*.md</include>
                <include>.gitignore</include>
              </includes>
              <trimTrailingWhitespace />
              <endWithNewline />
              <indent>
                <tabs>true</tabs>
                <spacesPerTab>4</spacesPerTab>
              </indent>
            </format>
          </formats>
          <java>
            <includes>
              <include>src/main/java/**/*.java</include>
              <include>src/test/java/**/*.java</include>
            </includes>

            <importOrder />
            <removeUnusedImports />

            <googleJavaFormat>
              <version>${google-java-format.version}</version>
              <style>GOOGLE</style>
            </googleJavaFormat>
          </java>
        </configuration>
        <executions>
          <execution>
            <id>spotless-check</id>
            <phase>compile</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
